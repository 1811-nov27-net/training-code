add Microsoft.EntityFrameworkCore.SqlServer package to the data access project

add:
    - Microsoft.EntityFrameworkCore.Tools
    - Microsoft.EntityFrameworkCore.Design
    - Microsoft.EntityFrameworkCore.SqlServer
to the startup project

add reference fromt he startup project to the data access project.

open Package Manager console under View -> Other Windows

run:
    Scaffold-DbContext "<connection string goes here>" Microsoft.EntityFrameworkCore.SqlServer -Project EFDBFirstDemo.DataAccess -Force

remove generated connection string from DBContext file.

....

when we make changes to the DB, we should re-scaffold our data access classes.
(running the Scaffold command requires that your solution compiles.)
when we do that, we need to have "-Force" at the end of our command, to overwrite the existing files.

then, we have to delete that connection string from the dbcontext class again.

---------------------

we used Scaffold-DBContext to generate an DbContext class with configuration using the fluent API
in the OnModelCreating method.

next week, we'll see how to do "code-first" EF, where we write the DbContext class by hand,
and then generate the SQL database from it.

nullable types in C# have a question mark after them
they are a simple way to make value types like int, bool, struct accept null as a possible value.
we want this sometimes with Entity Framework because SQL can have "INT NULL"
columns, DATETIME2 NULL columns, etc.
